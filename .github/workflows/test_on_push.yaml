name: CI/CD-Pipeline

on: [push]

jobs:
  test:
    runs-on: [ubuntu-latest]

    steps:
      - name: clone github repository
        uses: actions/checkout@master

      - name: install python3.9
        uses: actions/setup-python@v1
        with:
          python-version: '3.9'
          architecture: 'x64'

      - name: install poetry
        run: pip install poetry

      - name: install all project dependencies
        run: cd InnotterDjango && poetry install

      - name: run all tests for innotter-core-app
        run: cd InnotterDjango && poetry run pytest --cov=.

      #- name: run linter for innotter-core-app
      #- run: cd InnotterDjango && poetry run flake8 .

  build:
    runs-on: [ubuntu-latest]

    needs: [test]

    env:
     LOGIN: ${{ secrets.DOCKER_LOGIN }}
     NAME: ${{ secrets.DOCKER_NAME }}

    steps:
      - name: login in hub.docker.com
        run: echo ${{ secrets.DOCKER_PWD }} | docker login -u $LOGIN --password-stdin

      - name: clone github repository
        uses: actions/checkout@master

      - name: build docker image of innotter-core-app
        run: cd InnotterDjango && docker build -t $LOGIN/$NAME -f Dockerfile .

      - name: push docker image to hub.docker.com
        run: docker push $LOGIN/$NAME

  deploy:
    runs-on: [ubuntu-latest]

    needs: [build]

    env:
      LOGIN: ${{ secrets.DOCKER_LOGIN }}
      NAME: ${{ secrets.DOCKER_NAME }}

    steps:
      - name: login in hub.docker.com
        run: echo ${{ secrets.DOCKER_PWD }} | docker login -u $LOGIN --password-stdin

      - name: clone github repository
        uses: actions/checkout@master

      - name: pull docker image from hub.docker.com
        run: docker pull $LOGIN/$NAME

      - name: run innotter-core-app
        run: docker-compose up
