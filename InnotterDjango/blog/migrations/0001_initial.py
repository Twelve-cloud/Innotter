# Generated by Django 4.1.1 on 2022-09-14 16:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, verbose_name='Name')),
                ('uuid', models.CharField(max_length=30, unique=True, verbose_name='UUID')),
                ('description', models.TextField(verbose_name='Description')),
                ('image', models.URLField(blank=True, null=True, verbose_name='Image')),
                ('is_private', models.BooleanField(default=False, verbose_name='Private?')),
                ('unblock_date', models.DateTimeField(blank=True, null=True, verbose_name='Unblock date')),
                ('follow_requests', models.ManyToManyField(blank=True, null=True, related_name='requests', to=settings.AUTH_USER_MODEL, verbose_name='Requests')),
                ('followers', models.ManyToManyField(blank=True, null=True, related_name='follows', to=settings.AUTH_USER_MODEL, verbose_name='Followers')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name': 'Page',
                'verbose_name_plural': 'Pages',
                'db_table': 'Page',
                'ordering': ['uuid'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'db_table': 'Tag',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=180, verbose_name='Content')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='blog.page', verbose_name='Page')),
                ('reply_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='blog.post', verbose_name='Reply to')),
                ('users_liked', models.ManyToManyField(blank=True, null=True, related_name='liked_posts', to=settings.AUTH_USER_MODEL, verbose_name='Liked posts')),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
                'db_table': 'Post',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='page',
            name='tags',
            field=models.ManyToManyField(related_name='pages', to='blog.tag', verbose_name='Tags'),
        ),
    ]
